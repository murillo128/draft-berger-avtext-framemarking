<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE rfc SYSTEM "rfc2629.dtd">
<?rfc compact="yes"?>
<?rfc subcompact="yes"?>
<?rfc iprnotified="no" ?>
<?rfc strict="yes"?>
<?rfc symrefs="yes"?>
<?rfc toc="yes"?>
<?rfc tocdepth="4"?>

<rfc category="std" docName="draft-ietf-avtext-framemarking-04" ipr="trust200902">

  <front>
    <title abbrev="Frame Marking">Frame Marking RTP Header Extension</title>

    <author initials="E." surname="Berger" fullname="Espen Berger">
      <organization>Cisco Systems</organization>
      <address>
        <phone>+47 98228179</phone>
        <email>espeberg@cisco.com</email>
      </address>
    </author>

    <author fullname="Suhas Nandakumar" initials="S" surname="Nandakumar">
      <organization>Cisco Systems</organization>
      <address>
        <postal>
          <street>170 West Tasman Drive</street>
          <city>San Jose</city>
          <region>CA</region>
          <code>95134</code>
          <country>US</country>
        </postal>
        <email>snandaku@cisco.com</email>
      </address>
    </author>

	<author fullname="Mo Zanaty" initials="M" surname="Zanaty">
      <organization>Cisco Systems</organization>
      <address>
        <postal>
          <street>170 West Tasman Drive</street>
          <city>San Jose</city>
          <region>CA</region>
          <code>95134</code>
          <country>US</country>
        </postal>
        <email>mzanaty@cisco.com</email>
      </address>
    </author>

    <date month="March" year="2017"/>

    <area>Applications</area>
    <keyword>Internet-Draft</keyword>

    <abstract>
      <t>This document describes a Frame Marking RTP header extension used to
      convey information about video frames that is critical for error recovery
      and packet forwarding in RTP middleboxes or network nodes. It is most
      useful when media is encrypted, and essential when the middlebox or node
      has no access to the media decryption keys. It is also useful for
      codec-agnostic processing of encrypted or unencrypted media, while it also
      supports extensions for codec-specific information.</t>
    </abstract>
  </front>

  <middle>

    <section title="Introduction" anchor="intro">
      <t>Many widely deployed RTP <xref target="RFC3550" /> topologies
        <xref target="RFC7667" /> used in modern voice and video
      conferencing systems include a centralized component that acts as an RTP switch.
      It receives voice and video streams from each participant, which may be encrypted using
      SRTP <xref target="RFC3711" />, or extensions that provide participants with
      private media via end-to-end encryption where the switch has no access to media decryption keys.
      The goal is to provide a set of streams back to
      the participants which enable them to render the right media content. In a 
      simple video configuration, for example, the goal will be that each participant 
      sees and hears just the active speaker. In that case, the goal of the switch is to 
      receive the voice and video streams from each participant, determine the active 
      speaker based on energy in the voice packets, possibly using the client-to-mixer
      audio level RTP header extension <xref target="RFC6464" />, and select the corresponding video
        stream for transmission to participants; see <xref target="rtpswitch" />.</t>

      <t>In this document, an "RTP switch" is used as a common short term for the terms 
      "switching RTP mixer", "source projecting middlebox",
      "source forwarding unit/middlebox" and "video switching MCU" as
      discussed in <xref target="RFC7667" />.</t>

      <figure title="RTP switch" anchor="rtpswitch"><artwork><![CDATA[
         +---+      +------------+      +---+
         | A |<---->|            |<---->| B |
         +---+      |            |      +---+
                    |   RTP      |
         +---+      |  Switch    |      +---+
         | C |<---->|            |<---->| D |
         +---+      +------------+      +---+
]]>
    </artwork></figure>

    <t>In order to properly support switching of video streams, the RTP switch typically needs 
    some critical information about video frames in order to start and stop forwarding streams.
      <list style="symbols">
        <t>Because of inter-frame dependencies, it should ideally switch video streams at a point 
        where the first frame from the new speaker can be decoded by recipients without prior 
        frames, e.g switch on an intra-frame.  </t>
        <t>In many cases, the switch may need to drop frames in order to realize congestion control 
        techniques, and needs to know which frames can be dropped with minimal impact to video quality.</t>
        <t>Furthermore, it is highly desirable to do this in a payload format-agnostic way which is not
        specific to each different video codec.
        Most modern video codecs share common concepts around frame types and other critical information
          to make this codec-agnostic handling possible.</t>
        <t>It is also desirable to be able to do this for SRTP without requiring the video switch to 
        decrypt the packets. SRTP will encrypt the RTP payload format contents and consequently this 
        data is not usable for the switching function without decryption, which may not even
        be possible in the case of end-to-end encryption of private media.</t>
      </list>
     </t>

      <t>By providing meta-information about the RTP streams outside the encrypted media payload, an
      RTP switch can do codec-agnostic selective forwarding without decrypting the payload.
      This document specifies the necessary meta-information in an RTP header extension.
      </t>
    </section>
    <section title="Key Words for Normative Requirements">
      <t>
        The key words &quot;MUST&quot;, &quot;MUST NOT&quot;, &quot;REQUIRED&quot;,
        &quot;SHALL&quot;, &quot;SHALL NOT&quot;, &quot;SHOULD&quot;, &quot;SHOULD NOT&quot;, &quot;RECOMMENDED&quot;,  &quot;MAY&quot;, and
        &quot;OPTIONAL&quot; in this document are to be interpreted as described in
        <xref target="RFC2119" />.
      </t>
    </section>

    <section title="Frame Marking RTP Header Extension">
      <t>This specification uses RTP header extensions as defined in <xref target="RFC5285" />. A subset of
      meta-information from the video stream is provided as an RTP header extension to allow an RTP switch
      to do generic selective forwarding of video streams encoded with potentially different video codecs.</t>

      	<t>The Frame Marking RTP header extension is encoded
      	using the one-byte header or two-byte header as described in <xref target="RFC5285" />.
        The one-byte header format is used for examples in this memo.
        The two-byte header format is used when other two-byte header extensions
        are present in the same RTP packet, since mixing one-byte and two-byte extensions
        is not possible in the same RTP packet.</t>

        <t>This extension is only specified for Source (not Redunadancy) RTP Streams <xref target="RFC7656" /> that carry video payloads. It is not specified for audio payloads, nor is it specified for Redundancy RTP Streams. The (separate) specifications for Redudancy RTP Streams often include
            provisions for recovering any header extensions that were part of the original source packet.
            Such provisions SHALL be followed to recover the Frame Marking RTP header extension of the
            original source packet.</t>

      <section title="Extension for Non-Scalable Streams" anchor="mandatory-non-scalable">
      	<t>The following RTP header extension is RECOMMENDED for non-scalable streams.
           It MAY also be used for scalable streams if the sender has limited or no
           information about stream scalability.
           The ID is assigned per <xref target="RFC5285" />,
           and the length is encoded as L=0 which indicates 1 octet of data.</t>

      	<figure>
          <artwork><![CDATA[
 0                   1
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|  ID=? |  L=0  |S|E|I|D|0 0 0 0|
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+


]]></artwork></figure>

        <t>The following information are extracted from the media payload and sent in the Frame Marking RTP header extension.
          <list style='symbols'>
            <t>S: Start of Frame (1 bit) - MUST be 1 in the first packet in a frame; otherwise MUST be 0.</t>
            <t>E: End of Frame (1 bit) - MUST be 1 in the last packet in a frame; otherwise MUST be 0. </t>
            <t>I: Independent Frame  (1 bit) - MUST be 1 for frames that can be
               decoded independent of prior frames, e.g. intra-frame, VPX keyframe,
               H.264 IDR <xref target="RFC6184" />,
               H.265 IDR/CRA/BLA/RAP <xref target="RFC7798" />; 
               otherwise MUST be 0.</t>
            <t>D: Discardable Frame (1 bit) - MUST be 1 for frames that can be discarded,
                and still provide a decodable media stream; otherwise MUST be 0. </t>
            <t>The remaining (4 bits) - MUST be 0 for non-scalable streams.</t>
          </list>
        </t>
      </section>

      <section title="Extension for Scalable Streams" anchor="mandatory-scalable">
      	<t>The following RTP header extension is RECOMMENDED for scalable streams.
           It MAY also be used for non-scalable streams, in which case TID, LID and TL0PICIDX MUST be 0.
           The ID is assigned per <xref target="RFC5285" />,
           and the length is encoded as L=2 which indicates 3 octets of data.</t>
      	<figure>
          <artwork><![CDATA[
 0                   1                   2                   3
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|  ID=? |  L=2  |S|E|I|D|B| TID |   LID         |    TL0PICIDX  |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+


]]></artwork></figure>

        <t>The following information are extracted from the media payload and sent in the Frame Marking RTP header extension.
         	<list style='symbols'>
            <t>S: Start of Frame (1 bit) - MUST be 1 in the first packet in a frame
                within a layer; otherwise MUST be 0.</t>
            <t>E: End of Frame (1 bit) - MUST be 1 in the last packet in a frame
                within a layer; otherwise MUST be 0. </t>
            <t>I: Independent Frame  (1 bit) - MUST be 1 for frames that can be
               decoded independent of prior frames, e.g. intra-frame, VPX keyframe,
               H.264 IDR <xref target="RFC6184" />,
               H.265 IDR/CRA/BLA/RAP <xref target="RFC7798" />; 
               otherwise MUST be 0.</t>
            <t>D: Discardable Frame (1 bit) - MUST be 1 for frames that can be discarded,
                and still provide a decodable media stream; otherwise MUST be 0. </t>
            <t>B: Base Layer Sync (1 bit) - MUST be 1 if this frame only depends
                on the base layer; otherwise MUST be 0. If no scalability is used, this MUST be 0.</t>
            <t>TID: Temporal ID (3 bits) - The base temporal layer starts with 0, and increases
          		with 1 for each higher temporal layer/sub-layer. If no scalability is used, this MUST be 0.</t>
            <t>LID: Layer ID (8 bits) - Identifies the spatial and quality layer encoded.
                   If no scalability is used, this MUST be 0 or omitted. When omitted, TL0PICIDX MUST also be omitted.</t>
            <t>TL0PICIDX: Temporal Layer 0 Picture Index (8 bits) - Running index of
               base temporal layer 0 frames when TID is 0. When TID is not 0,
               this indicates a dependency on the given index.
               If no scalability is used, this MUST be 0 or omitted. When omitted, LID MUST also be omitted.</t>
         	</list>
      	</t>
      	
      	<t>The layer information contained in TID and LID convey useful aspects of the layer structure that
          can be utilized in selective forwarding. Without further information about the layer structure,
          these identifiers can only be used for relative priority of layers.
          They convey a layer hierarchy with TID=0 and LID=0 identifying the base layer.
          Higher values of TID identify higher temporal layers with higher frame rates.
          Higher values of LID identify higher spatial and/or quality layers with higher resolutions and/or bitrates.
          </t><t>
          With further information,
          for example, possible future RTCP SDES items that convey full layer structure information, it may
          be possible to map these TIDs and LIDs to specific frame rates, resolutions and bitrates.
          Such additional layer information may be useful for forwarding decisions in the RTP switch,
          but is beyond the scope of this memo. The relative layer information is still useful
          for many selective forwarding decisions even without such additional layer information.
        </t>
      	
  	<section title="Layer ID Mappings for Scalable Streams">
      <section title="H265 LID Mapping">
    	 <t> The following shows the H265 <xref target="RFC7798" /> LayerID (6 bits) and TID (3 bits) from the NAL unit header mapped to the generic LID and TID fields.</t>
       <t>The I bit MUST be 1 when the NAL unit type is 16-23 (inclusive), otherwise it MUST be 0.</t>
       <t>The S and E bits MUST match the corresponding bits in PACI:PHES:TSCI payload structures.</t>
       
      <figure>
          <artwork><![CDATA[
 0                   1                   2                   3
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|  ID=2 |  L=2  |S|E|I|D|B| TID |0|0|  LayerID  |    TL0PICIDX  |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
]]></artwork></figure>

    </section>
    <section title="VP9 LID Mapping">
	 <t> The following  shows VP9 Layer encoding information (4 bits for
	 spatial and quality, 3 bits for temporal layer) mapped to the generic LID and TID fields.</t>
      <figure>
          <artwork><![CDATA[
 0                   1                   2                   3
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|  ID=2 |  L=2  |S|E|I|D|B| TID |0|0|0|0| RS| RQ|    TL0PICIDX  |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
]]></artwork></figure>
    </section>
    <section title="VP8 LID Mapping">
   <t> The following  shows the header extension for VP8 that contains
    only temporal layer information.</t>
      <figure>
          <artwork><![CDATA[
 0                   1                   2                   3
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|  ID=2 |  L=2  |S|E|I|D|B| TID |0|0|0|0|0|0|0|0|    TL0PICIDX  |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
]]></artwork></figure>
    </section>
    <section title="H264-SVC LID Mapping">
   <t> The following shows H264-SVC <xref target="RFC6190" /> Layer encoding information (3 bits for
   spatial/dependency layer, 4 bits for quality layer and 3 bits for temporal layer) mapped to the generic LID and TID fields.</t>
   <t>The S, E, I and D bits MUST match the corresponding bits in PACSI payload structures.</t>
   
      <figure>
          <artwork><![CDATA[
 0                   1                   2                   3
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|  ID=2 |  L=2  |S|E|I|D|B| TID |0| DID |  QID  |    TL0PICIDX  |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
]]></artwork></figure>
    </section>
    <section title="H264 (AVC) LID Mapping">
   <t> The following  shows the header extension for H264 (AVC) that contains
    only temporal layer information.</t>
      <figure>
          <artwork><![CDATA[
 0                   1                   2                   3
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|  ID=2 |  L=2  |S|E|I|D|B| TID |0|0|0|0|0|0|0|0|    TL0PICIDX  |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
]]></artwork></figure>
    </section>
  </section>
  </section>
    
    <section title="Signaling Information">
      <t>The URI for declaring this header extension in an extmap attribute is 
      "urn:ietf:params:rtp-hdrext:framemarking". It does not contain any
      extension attributes. </t>
      <t>An example attribute line in SDP:</t>
      <figure>
          <artwork><![CDATA[
   a=extmap:3 urn:ietf:params:rtp-hdrext:framemarking
]]></artwork></figure>

    </section>

    <section title="Usage Considerations">
      <t>The header extension values MUST represent what is already in the RTP payload.</t>
      <t> When a RTP switch needs to discard a received video frame due to congestion control considerations, 
      it is RECOMMENDED that it preferably drop frames marked with the "discardable" bit.</t>
      <t> When a RTP switch wants to forward a new video stream to a receiver, it is RECOMMENDED to
      select the new video stream from the first switching point (I bit set) and forward the same.
      A RTP switch can request a media source to generate a switching point for H.264 by sending
      Full Intra Request (RTCP FIR) as defined in <xref target="RFC5104" />, for example. </t>
      
      <section title="Relation to Layer Refresh Request (LRR)">
        <t>Receivers can use the Layer Refresh Request (LRR) <xref target="I-D.ietf-avtext-lrr" />
          RTCP feedback message
          to upgrade to a higher layer in scalable encodings. The TID/LID values
          and formats used in LRR messages correspond to the same values and formats
          specified in <xref target="mandatory-scalable" />.
        </t>
      </section>
    </section>
  </section>

    <section title="Security Considerations"  >
      <t>In the Secure Real-Time Transport Protocol (SRTP) <xref target="RFC3711" />, RTP  header extensions are 
      authenticated but usually not encrypted. When header extensions are used  some of the payload type information are
      exposed and visible to middle boxes. The encrypted media data is not exposed, so this is not seen as a 
      high risk exposure. </t>
    </section>

	<section title="Acknowledgements">
      <t>Many thanks to Bernard Aboba, Jonathan Lennox, and Stephan Wenger for their inputs.</t>
    </section>

    <section title="IANA Considerations">
      <t>This document defines a new extension URI to the RTP Compact HeaderExtensions sub-registry of the 
      	Real-Time Transport Protocol (RTP) Parameters registry, according to the following data:</t>
   <t>Extension URI:  urn:ietf:params:rtp-hdrext:framemarkinginfo<vspace />
   Description: Frame marking information for video streams<vspace />
   Contact: mzanaty@cisco.com<vspace />
   Reference: RFC XXXX</t>

   <t>Note to RFC Editor: please replace RFC XXXX with the number of this
   RFC.</t>
    </section>

  </middle>

  <back>

    <references title="Normative References">
      <?rfc include="reference.RFC.2119"?>
    </references>
    <references title="Informative References">
    <?rfc include="reference.RFC.7656"?>
    <?rfc include="reference.RFC.7667"?>
    <?rfc include="reference.RFC.6464"?>
    <?rfc include="reference.RFC.3550"?>
    <?rfc include="reference.RFC.3711"?>
    <?rfc include="reference.RFC.5104"?>
    <?rfc include="reference.RFC.5285"?>
    <?rfc include="reference.RFC.6184"?>
    <?rfc include="reference.RFC.6190"?>
    <?rfc include="reference.RFC.7798"?>
    <?rfc include="reference.I-D.ietf-avtext-lrr"?>
    </references>
  </back>
</rfc>
